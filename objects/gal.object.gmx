<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_global_volume(30)


p1win=0
p2win=0
cardpick=false
setPicker=0//Picks one of the four sets in the deck
cardPicker=0//Picks card in individual set
global.pickturn=0
global.super=0

//SINCE YOU CAN ONILY FREAKING USE 14 IM JUST GONNA USE 13 FOR EACH AND SEPERATE THEM
deckbuffs = ds_list_create();
deckactives = ds_list_create();
decksupers = ds_list_create();
deckdebuffs = ds_list_create();

ds_list_add(deckbuffs,0,1,2,3,4,5,6,7,8,9,10,11,12)
ds_list_add(deckactives,1,2,3,4,5,6,7,8,9,10,11,12,13)
ds_list_add(decksupers,1,2,3,4,5,6,7,8,9,10,11,12,13)
ds_list_add(deckdebuffs,1,2,3,4,5,6,7,8,9,10,11,12,13)

//ds_list_shuffle(deckbuffs)
//ds_list_shuffle(deckactives)
//ds_list_shuffle(decksupers)
//ds_list_shuffle(deckdebuffs)


//End of Round Stuff
global.roundEnd=0
currentRound=1
winnerName=""
timeEnd=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///character swapping &amp;&amp; super activation
if(global.super!=0 &amp;&amp; !instance_exists(superbkg))
{instance_create(camera.x,camera.y,superbkg)}

if(keyboard_check_pressed(ord("1")))
{
if(instance_exists(obj_alan)) {}
if(instance_exists(obj_jack)) {instance_destroy(obj_jack);instance_create(x+300,y+200,obj_alan)}
}

if(keyboard_check_pressed(ord("2")))
{
if(instance_exists(obj_ace)) {}
if(instance_exists(obj_alan)) {instance_destroy(obj_alan);instance_create(x+300,y+200,obj_ace)}
}

if(keyboard_check_pressed(ord("3")))
{
if(instance_exists(obj_rey)) {}
if(instance_exists(obj_magnus)) {instance_destroy(obj_magnus);instance_create(x+300,y+200,obj_rey)}
}

if(keyboard_check_pressed(ord("4")))
{
if(instance_exists(obj_alta)) {}
if(instance_exists(obj_rey)) {instance_destroy(obj_rey);instance_create(x+300,y+200,obj_alta)}
}
if(keyboard_check_pressed(ord("5")))
{
if(instance_exists(obj_jack)) {}
if(instance_exists(obj_ace) or instance_exists(obj_alan)) {instance_destroy(obj_ace);instance_create(x+300,y+200,obj_jack)}
}

if(keyboard_check_pressed(ord("6")))
{
if(instance_exists(obj_rey)) {}
if(instance_exists(obj_alta)) {instance_destroy(obj_alta);instance_create(x+300,y+200,obj_magnus)}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///level up moves for testing
if(keyboard_check_pressed(ord("T")))
{
p1.FBlv++
p1.RDlv++
p1.GBlv++
}

if(keyboard_check_pressed(ord("Y")))
{
p1.FBlv--
p1.RDlv--
p1.GBlv--
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cardpicker
if(cardpick=true)
{randomize()
//setPicker=irandom_range(1,4)
setPicker=1
rancrap=0 
if(setPicker==1 &amp;&amp; ds_list_size(deckbuffs) &gt;= 1)//Buffs
{rancrap=irandom_range(0,ds_list_size(deckbuffs))
cardPicker=ds_list_find_value(deckbuffs,rancrap)
show_debug_message(cardPicker)
ds_list_delete(deckbuffs,rancrap)
ds_list_shuffle(deckbuffs)
cardpick=false
} else setPicker=2

if(setPicker==2 &amp;&amp; ds_list_size(deckactives) &gt;= 1)//Buffs
{rancrap=irandom_range(1,ds_list_size(deckactives))
cardPicker=ds_list_find_value(deckactives,rancrap)
ds_list_delete(deckactives,rancrap)
} else setPicker=3

if(setPicker==3)//Supers
{
cardPicker=irandom_range(1,ds_list_size(decksupers))
ds_list_delete(decksupers,cardPicker)
}

if(setPicker==4)//Debuffs
{
cardPicker=irandom_range(1,ds_list_size(deckdebuffs))
ds_list_delete(deckdebuffs,cardPicker)
}
cardpick=false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rounnnnnd Endddd!!!!
if(p1.hp&lt;=0 &amp;&amp; !instance_exists(obj_winflash))
{
instance_create(x,y,obj_winflash)
p1.vsp=-6
}


if(p2.hp&lt;=0 &amp;&amp; !instance_exists(obj_winflash))
{
instance_create(x,y,obj_winflash)
p2.vsp=-6
}

if(global.roundEnd=0)
{
if(p1.hp&lt;=0)
{losername=global.p1char}

if(p2.hp&lt;=0)
{losername=global.p2char}

}
if((p1.hp&lt;=0 or p2.hp&lt;=0) &amp;&amp; !instance_exists(card1))
{
global.roundEnd=1
//end animation thing


if(instance_exists(obj_winflash))
{
if(losername=global.p1char &amp;&amp; global.roundEnd=1 &amp;&amp; obj_winflash.switchh=0) {obj_winflash.switchh=1;p1.vsp=-6;p1.hstun=1000}
if(losername=global.p2char &amp;&amp; global.roundEnd=1 &amp;&amp; obj_winflash.switchh=0) {obj_winflash.switchh=1;p2.vsp=-6;p2.hstun=1000}
}


}
if((p1.hp&lt;=0 or p2.hp&lt;=0) &amp;&amp; !instance_exists(card1) &amp;&amp; !instance_exists(obj_ko) &amp;&amp; (p2win&gt;=5 or p1win&gt;=5))
{
instance_create(x,y,obj_ko)
}


if(global.roundEnd=1 &amp;&amp; !instance_exists(obj_start))
{
if(p1.hp&lt;=0)
{winnerName=global.p2char}

if(p2.hp&lt;=0)
{winnerName=global.p1char}

//timeEnd++

}
if(timeEnd=1)
{
if(p1.hp&lt;=0)p2win++
if(p2.hp&lt;=0)p1win++
}
if(timeEnd&gt;=40 &amp;&amp; timeEnd&lt;=100 &amp;&amp; !instance_exists(ftb))
{
instance_create(x,y,ftb)
room_speed=60
ftb.image_alpha=(timeEnd/100)
}

if(timeEnd&gt;=80)
{draw_set_color(c_white)
if(global.pickturn=0 &amp;&amp; !instance_exists(obj_start) &amp;&amp; !instance_exists(restart_match)) //outline time kms
{

draw_set_color(c_red);
draw_set_font(font1)
displaytext=losername+", Pick a Card!"
draw_text(view_xview[0]+view_wview[0]/2-159,view_yview[0]+view_hview[0]/2+99,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-159,view_yview[0]+view_hview[0]/2+100,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-159,view_yview[0]+view_hview[0]/2+101,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-161,view_yview[0]+view_hview[0]/2+99,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-161,view_yview[0]+view_hview[0]/2+100,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-161,view_yview[0]+view_hview[0]/2+101,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-160,view_yview[0]+view_hview[0]/2+99,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-160,view_yview[0]+view_hview[0]/2+101,displaytext)


draw_set_color(c_white);
draw_text(view_xview[0]+view_wview[0]/2-160,view_yview[0]+view_hview[0]/2+100,displaytext)//actual one



}
if(global.pickturn=1 &amp;&amp; !instance_exists(obj_start) &amp;&amp; !instance_exists(restart_match))
{

draw_set_color(c_green);
draw_set_font(font1)
displaytext=winnerName+", Pick a Card!"
draw_text(view_xview[0]+view_wview[0]/2-159,view_yview[0]+view_hview[0]/2+99,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-159,view_yview[0]+view_hview[0]/2+100,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-159,view_yview[0]+view_hview[0]/2+101,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-161,view_yview[0]+view_hview[0]/2+99,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-161,view_yview[0]+view_hview[0]/2+100,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-161,view_yview[0]+view_hview[0]/2+101,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-160,view_yview[0]+view_hview[0]/2+99,displaytext)
draw_text(view_xview[0]+view_wview[0]/2-160,view_yview[0]+view_hview[0]/2+101,displaytext)


draw_set_color(c_white);
draw_text(view_xview[0]+view_wview[0]/2-160,view_yview[0]+view_hview[0]/2+100,displaytext)//actual one


}

}
if(timeEnd=60)
{
rancrap=irandom_range(0,ds_list_size(deckbuffs))
cardPicker=ds_list_find_value(deckbuffs,rancrap)
show_debug_message(cardPicker)
ds_list_delete(deckbuffs,rancrap)
ds_list_shuffle(deckbuffs)

with (instance_create(view_xview[0]+150,view_yview[0]+150 ,card1))
{
image_index=other.cardPicker
}
timeEnd++
}

if(timeEnd=65)
{
rancrap=irandom_range(0,ds_list_size(deckbuffs))
cardPicker=ds_list_find_value(deckbuffs,rancrap)
show_debug_message(cardPicker)
ds_list_delete(deckbuffs,rancrap)
ds_list_shuffle(deckbuffs)
with (instance_create(view_xview[0]+320,view_yview[0]+150 ,card1))
{
image_index=other.cardPicker
}
instance_create(view_xview[0]+320,view_yview[0]+150,obj_cardpicker)
timeEnd++
}

if(timeEnd=70)
{
rancrap=irandom_range(0,ds_list_size(deckbuffs))
cardPicker=ds_list_find_value(deckbuffs,rancrap)
show_debug_message(cardPicker)
ds_list_delete(deckbuffs,rancrap)
ds_list_shuffle(deckbuffs)
with (instance_create(view_xview[0]+500,view_yview[0]+150 ,card1))
{
image_index=other.cardPicker
}
timeEnd++
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Round Resume!??!?!?

if(global.pickturn=2 &amp;&amp; instance_exists(ftb))
{
instance_destroy(ftb)
p1.hp=p1.mhp
p1.abi=p1.mabi
p2.abi=p2.mabi
p2.hp=p2.mhp
p1.hsp=0
p2.hsp=0
p1.hspeed=0
p2.hspeed=0
room_speed=60
global.time=99
timeEnd=0
instance_destroy(obj_cardpicker)
instance_destroy(card1)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///supereffect
if(global.super=0) rad=100
if(global.super=1 &amp;&amp; rad&gt;0)
{rad-=5
draw_set_color(c_blue)
draw_circle(p1.x,p1.y,rad,true)
draw_circle(p1.x,p1.y,rad+1,true)
draw_circle(p1.x,p1.y,rad-1,true)

draw_circle(p1.x,p1.y,rad*3,true)
draw_circle(p1.x,p1.y,(rad*3)+1,true)
draw_circle(p1.x,p1.y,(rad*3)+2,true)
draw_circle(p1.x,p1.y,(rad*3)-1,true)
draw_circle(p1.x,p1.y,(rad*3)-2,true)

draw_circle(p1.x,p1.y,rad*3,true)
draw_circle(p1.x,p1.y,(rad*5)+1,true)
draw_circle(p1.x,p1.y,(rad*5)+2,true)
draw_circle(p1.x,p1.y,(rad*5)-1,true)
draw_circle(p1.x,p1.y,(rad*5)-2,true)
draw_circle(p1.x,p1.y,(rad*5)+3,true)
draw_circle(p1.x,p1.y,(rad*5)+4,true)
draw_circle(p1.x,p1.y,(rad*5)-3,true)
draw_circle(p1.x,p1.y,(rad*5)-4,true)


}
if(rad&lt;=0) global.super=0
//effect2
if(global.super=0) rad=100
if(global.super=2 &amp;&amp; rad&gt;0)
{rad-=5
draw_set_color(c_blue)
draw_circle(p2.x,p2.y,rad,true)
draw_circle(p2.x,p2.y,rad+1,true)
draw_circle(p2.x,p2.y,rad-1,true)

draw_circle(p2.x,p2.y,rad*3,true)
draw_circle(p2.x,p2.y,(rad*3)+1,true)
draw_circle(p2.x,p2.y,(rad*3)+2,true)
draw_circle(p2.x,p2.y,(rad*3)-1,true)
draw_circle(p2.x,p2.y,(rad*3)-2,true)

draw_circle(p2.x,p2.y,rad*3,true)
draw_circle(p2.x,p2.y,(rad*5)+1,true)
draw_circle(p2.x,p2.y,(rad*5)+2,true)
draw_circle(p2.x,p2.y,(rad*5)-1,true)
draw_circle(p2.x,p2.y,(rad*5)-2,true)
draw_circle(p2.x,p2.y,(rad*5)+3,true)
draw_circle(p2.x,p2.y,(rad*5)+4,true)
draw_circle(p2.x,p2.y,(rad*5)-3,true)
draw_circle(p2.x,p2.y,(rad*5)-4,true)


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p1.hp=9999
p2.hp=9999
p1.abi=999
p2.abi=999
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>531</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_fullscreen</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p1.abi=p1.mabi
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
