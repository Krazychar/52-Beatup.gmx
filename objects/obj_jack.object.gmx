<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_jack_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>p1</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0.2
image_index=0
room_speed=60
image_yscale=4  
attacking=0
global.p1char="Jackson"
hsp=0
vsp=0
block=0
hitstun=0
grav=0.3
grounded=0
hboxhit=0
dashtime=0
angle=0
//special move variables
link=false
linktime=0
linkdir=keyboard_check_direct(vk_up)
linkatk=keyboard_check_direct(vk_up)
linkspr=0
Fireball=true
Dragonpunch=true
Shieldbreak=true
//battle variables
agi=5
dashing=0
dashcheck=0
freakingslickdash=0
dashtimerfinal=0
cancel=0
hp=200
mhp=hp
atk=1
abi=5
projdef=0
dashlng=15
rage=false
nKb=false
coward=false
pH=agi
fastSpec=0
damage=0
hstun=0
hit=0
xpos=0
ypos=0
xscal=1
yscal=1
launchh=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.roundEnd</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking
light=keyboard_check_pressed(ord("J"))
heavy=keyboard_check_pressed(ord("K"))
launch=keyboard_check_pressed(ord("L"))
//face direction

if(grounded=1 &amp;&amp; attacking=0)
{

if(x &gt; p2.x)
{image_xscale=-4}
else
{image_xscale=4}

}

//if(attacking=1 &amp;&amp; place_meeting(x,y+1,ground) &amp;&amp; dashing=0) hsp=0
if((sprite_index=spr_jack_light or sprite_index=spr_jack_heavy or sprite_index=spr_jack_launch) &amp;&amp; !place_meeting(x,y+1,ground)) 
{
sprite_index=spr_jack_jump
attacking=0
}

if((sprite_index=spr_jack_heavyair or sprite_index=spr_jack_lightair or sprite_index=spr_jack_launchair) &amp;&amp; place_meeting(x,y+1,ground)) 
{
sprite_index=spr_jack_idle
freakingslickdash=0
attacking=0
}
if(hitstun&lt;=0)
{
if(place_meeting(x,y+1,ground))
{

if((!left &amp;&amp; image_xscale&lt;0 or !right &amp;&amp; image_xscale&gt;0) &amp;&amp; light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_jack_light &amp;&amp; sprite_index!=spr_jack_heavy &amp;&amp; sprite_index!=spr_jack_launch)
{cancel=0
hboxhit=0
hit=2
damage=6
xscal=4
yscal=1
hstun=29
xpos=hsp+30
ypos=-16
launchh=false
sprite_index=spr_jack_light
image_index=0
image_speed=0.2
hsp=1
attacking=1
angle=0
}
if(sprite_index=spr_jack_light &amp;&amp; image_index&gt;5)
{
sprite_index=spr_jack_idle
attacking=0
image_index=0
}
//jabby
if((left &amp;&amp; image_xscale&lt;0 or right &amp;&amp; image_xscale&gt;0) &amp;&amp; light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_jack_forlight &amp;&amp; sprite_index!=spr_jack_heavy &amp;&amp; sprite_index!=spr_jack_launch)
{cancel=0
hboxhit=0
hit=2
damage=7
xscal=5
yscal=1
hstun=26
xpos=hsp+43
ypos=-13
launchh=false
sprite_index=spr_jack_forlight
image_index=0
image_speed=0.2
hsp=1
attacking=1
angle=0
}
if(sprite_index=spr_jack_forlight &amp;&amp; image_index&gt;7)
{
sprite_index=spr_jack_idle
attacking=0
image_index=0
}
//nsdas

if(heavy &amp;&amp; dashing=0 &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_jack_launch &amp;&amp; sprite_index!=spr_jack_heavy)
{cancel=0
hboxhit=0
hit=3
damage=15
xscal=3
ysca1=3
hstun=42
xpos=hsp+24
ypos=-14
launchh=false
sprite_index=spr_jack_heavy
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
angle=0
}
if(sprite_index=spr_jack_heavy &amp;&amp; image_index&gt;6)
{hsp+=3*image_xscale
sprite_index=spr_jack_idle
attacking=0
image_index=0
}


if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_jack_launch)
{hboxhit=0
cancel=0
hit=5
damage=12
hstun=90
xscal=2
yscal=12
xpos=hsp+30
ypos=-20
launchh=true
sprite_index=spr_jack_launch
image_index=0
image_speed=0.2
hsp+=1*image_xscale
angle=90
attacking=1
}
if(sprite_index=spr_jack_launch &amp;&amp; image_index&gt;11)
{
sprite_index=spr_jack_idle
attacking=0
image_index=0
}

}
else

{
if(light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_jack_heavyair &amp;&amp; sprite_index!=spr_alan_launch  &amp;&amp; sprite_index!=spr_jack_lightair)
{cancel=0
hboxhit=0
hit=2
damage=8
xscal=3
yscal=2
hstun=35
xpos=hsp+30
ypos=+30
launchh=false
sprite_index=spr_jack_lightair
image_index=0
image_speed=0.2
attacking=1
angle=15
}
if(sprite_index=spr_jack_lightair &amp;&amp; image_index&gt;5)
{
sprite_index=spr_jack_jump
attacking=0
image_index=0
}


if(heavy &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alan_launch &amp;&amp; sprite_index!=spr_jack_heavyair)
{cancel=0
hboxhit=0
hit=4
damage=19
xscal=6
yscal=2
hstun=40
xpos=hsp+20
ypos=+40
vsp-=2
launchh=false
sprite_index=spr_jack_heavyair
image_index=0
image_speed=0.2
attacking=1
angle=10
}
if(sprite_index=spr_jack_heavyair &amp;&amp; image_index&gt;10)
{
sprite_index=spr_jack_jump
attacking=0
image_index=0
}

if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_jack_launchair)
{cancel=0
hboxhit=0
hit=3
damage=16
xscal=2
yscal=8
hstun=25
xpos=hsp+26
ypos=53
launchh=false
sprite_index=spr_jack_launchair
image_index=0
image_speed=0.2
angle=270
attacking=1
}
if(sprite_index=spr_alan_launch &amp;&amp; image_index&gt;9)
{
sprite_index=spr_jack_jump
attacking=0
image_index=0
}

}

if(attacking=true &amp;&amp; image_index&gt;=hit &amp;&amp; hboxhit=0)
{hboxhit=1
instance_create(x+xpos*(image_xscale/2),y+ypos,p1hbox)
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///input
left=keyboard_check_direct(ord("A"))
right=keyboard_check_direct(ord("D"))
pleft=keyboard_check_pressed(ord("A"))
pright=keyboard_check_pressed(ord("D"))
jump=keyboard_check_direct(ord("W"))
//move left and right
//if(left or right) hsp=round(hsp)
if(dashing=0 &amp;&amp; block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=0)
{
if(pleft &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_jack_dash &amp;&amp; sprite_index!=spr_jack_backdash)
{attacking=2
if(image_xscale=4) sprite_index=spr_jack_backdash
else sprite_index=spr_jack_dash
image_index=0
hsp=-17
dashtime=dashlng
dashing=1}
if(pleft &amp;&amp; sprite_index!=spr_jack_dash &amp;&amp; sprite_index!=spr_jack_backdash)
{dashtime=17
dashcheck=1}

if(pright &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_jack_dash &amp;&amp; sprite_index!=spr_jack_backdash )
{attacking=2
if(image_xscale=4) sprite_index=spr_jack_dash
else sprite_index=spr_jack_backdash
image_index=0
hsp=17
dashtime=dashlng
dashing=1}
if(pright &amp;&amp; sprite_index!=spr_jack_dash &amp;&amp; sprite_index!=spr_jack_backdash)
{dashtime=17

dashcheck=1}
}
if(dashtime&lt;=0 &amp;&amp; (sprite_index==spr_jack_dash or sprite_index==spr_jack_backdash))
{attacking=0
dashcheck=0
dashing=0
sprite_index=spr_jack_idle
freakingslickdash=0}

if(sprite_index=spr_jack_idle) freakingslickdash=0

if(dashtime&gt;0) dashtime-=1

if(dashing=1 &amp;&amp; dashtimerfinal&gt;40 or dashtime&lt;=0)
{dashing=0
dashtimerfinal=0
dashtime=0
dashcheck=0
hsp=0}

if(dashing=1)
{dashtimerfinal++}

if(grounded=0 &amp;&amp; dashing=0)
{dashcheck=0
dashing=0
dashtime=0}

if(attacking==0 &amp;&amp; vsp&lt;0 &amp;&amp; !place_meeting(x,y+3,ground))
{sprite_index=spr_jack_jump}
if(attacking==0 &amp;&amp; hsp==0 &amp;&amp; grounded=1)
{sprite_index=spr_jack_idle}
if(attacking=0)// &amp;&amp; grounded=1)
{
if(dashing=0)// &amp;&amp; grounded=1)
{
if(hitstun&lt;=0)
{
if (left)

{
if(hsp&lt;-agi){}
else
{hsp=-agi
if(coward=true &amp;&amp; image_xscale&gt;0) hsp=-agi -2}

}

if (right)
{
if(hsp&gt;agi){}
else
{hsp=agi
if(coward=true &amp;&amp; image_xscale&lt;0) hsp=agi +2}
}
}
}
//neutral input = 0 movement
if (((right &amp;&amp; left) or (!right &amp;&amp; !left)))
{
hsp=0

}

}
//jumping
if(dashing=0 &amp;&amp; jump &amp;&amp; grounded=1 &amp;&amp; (attacking!=1 or cancel=1 &amp;&amp; sprite_index=spr_jack_launch))
{
grounded=0
if(sprite_index=spr_jack_launch)
{vsp=-14
instance_create(x,y+64,obj_jumpeffect)}
else
{vsp=-10}
}


//vertical collision
if (place_meeting (x,y+vsp,ground))
{
    while(!place_meeting(x,y+sign(vsp),ground))
    {
    y+=sign(vsp);
    }
    vsp=0
    grounded = 1;
}



else
{
grounded = 0
}
//horizontal collision   
if place_meeting(x+hsp,y,ground)
{
    if(!place_meeting(x+sign(hsp),y,ground)) hsp+=sign(hsp);
    hsp = 0;
}    
 
//commit to movement
x += hsp;
y += vsp;

vsp+=grav


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///blocking

if((image_xscale&lt;0 &amp;&amp; right or image_xscale&gt;0 &amp;&amp; left) &amp;&amp; p2.attacking=true &amp;&amp; global.p1combo=0 &amp;&amp; p2.block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=false)
{
attacking=1
hsp=0
block=1
sprite_index=spr_jack_block
}
if(sprite_index=spr_jack_block &amp;&amp; p2.attacking=false)
{
attacking=0
block=0
sprite_index=spr_jack_idle
image_blend=c_white
}
if(attacking=false)
{block=0
image_blend=c_white}
if((image_xscale&lt;0 &amp;&amp; !right or image_xscale&gt;0 &amp;&amp; !left) &amp;&amp; block=1)
{block=0
attacking=0}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit
if(hitstun&gt;0)
{
hitstun--
sprite_index=spr_jack_hit
attacking=1
hsp=0
}
if(hitstun&lt;=0 &amp;&amp; sprite_index=spr_jack_hit)
{
hitstun=0
sprite_index=spr_jack_idle
attacking=0
global.p2combo=0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x,y-70,dashtime)

if(global.p2combo=0 &amp;&amp; (sprite_index=spr_alan_dash or sprite_index=spr_alan_backdash or hsp&lt;-agi or hsp&gt;agi or launchh=true or freakingslickdash=1))
{
freakingslickdash=1
draw_set_color(c_red)
draw_sprite_ext(sprite_index,image_index-image_speed,x-hsp*3,y-vsp*3,image_xscale,4,0,c_red,0.4)
}
if(place_meeting(x,y+1,ground))
{freakingslickdash=0}

draw_text(x,y-90,linktime)
draw_text(x,y-120,link)

//DELETE TEST THING
if(keyboard_check_pressed(ord("G")))
{
hit=0
attacking=1
sprite_index=spr_jack_flurry
image_index=0
damage=12
hstun=20
}
if(sprite_index=spr_jack_flurry)
{
draw_sprite_ext(sprite_index,image_index-1,x-hsp*3,y-vsp*3,image_xscale,4,0,c_red,0.6)
draw_sprite_ext(sprite_index,image_index-2,x-hsp*3,y-vsp*3,image_xscale,4,0,c_red,0.4)
draw_sprite_ext(sprite_index,image_index-3,x-hsp*3,y-vsp*3,image_xscale,4,0,c_red,0.2)
}

draw_self()
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=16 &amp;&amp; hit=0)
{instance_create(x+10*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=17 &amp;&amp; hit=1)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=18 &amp;&amp; hit=2)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=19 &amp;&amp; hit=3)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=20 &amp;&amp; hit=4)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=21 &amp;&amp; hit=5)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=22 &amp;&amp; hit=6)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=23 &amp;&amp; hit=7)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=24 &amp;&amp; hit=8)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=25 &amp;&amp; hit=9)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=27 &amp;&amp; hit=10)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}
if(sprite_index=spr_jack_flurry &amp;&amp; image_index&gt;=29 &amp;&amp; hit=11)
{instance_create(x+40*image_xscale,y,p1hbox);hit++}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
