<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rey_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>p2</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0.2
image_index=0
room_speed=60
attacking=0
image_yscale=4  
global.p2char="Rey"
hsp=0
vsp=0
grav=0.3
grounded=0
hitstun=0
hboxhit=0
dashtime=0
angle=0
//battle variables
agi=3
dashing=0
dashcheck=0
block=0
freakingslickdash=0
dashtimerfinal=0
cancel=0
hp=240
mhp=hp
atk=1
abi=5
projdef=0
dashlng=23
rage=false
nKb=false
coward=false
pH=agi
fastSpec=0
use=5
damage=0
hstun=0
hit=0
xpos=0
ypos=0
xscal=1
yscal=1
launchh=false
airMovementDir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.roundEnd</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking
light=keyboard_check_pressed(ord("Z"))
heavy=keyboard_check_pressed(ord("X"))
launch=keyboard_check_pressed(ord("C"))
//face direction
if(grounded=1 &amp;&amp; attacking=0)
{

if(x &gt; p1.x)
{image_xscale=-4}
else
{image_xscale=4}

}

//if(attacking=1 &amp;&amp; place_meeting(x,y+1,ground) &amp;&amp; dashing=0) hsp=0
if((sprite_index=spr_rey_light or sprite_index=spr_rey_heavy or sprite_index=spr_rey_launch or sprite_index=spr_alan_heavydash) &amp;&amp; !place_meeting(x,y+1,ground)) 
{
sprite_index=spr_rey_jump
attacking=0
}

if((sprite_index=spr_rey_heavyair or sprite_index=spr_rey_lightair or sprite_index=spr_rey_launchair or sprite_index=spr_rey_heavyforair) &amp;&amp; place_meeting(x,y+1,ground)) 
{
sprite_index=spr_rey_idle
freakingslickdash=0
attacking=0
}
if(hitstun&lt;=0)
{
if(place_meeting(x,y+1,ground))
{

if(light &amp;&amp; (attacking=0 or cancel=1)&amp;&amp; sprite_index!=spr_rey_light &amp;&amp; sprite_index!=spr_rey_heavy &amp;&amp; sprite_index!=spr_rey_launch)
{cancel=0
hboxhit=0
hit=2
damage=12
xscal=2
yscal=3
hstun=30
xpos=hsp+26
ypos=-13
launchh=false
sprite_index=spr_rey_light
image_index=0
image_speed=0.2
hsp=1
attacking=1
}
if(sprite_index=spr_rey_light &amp;&amp; image_index&gt;6)
{
sprite_index=spr_rey_idle
attacking=0
image_index=0
}

if(heavy &amp;&amp; dashing=0 &amp;&amp; (attacking=0 or cancel=1)&amp;&amp; sprite_index!=spr_rey_heavy &amp;&amp; sprite_index!=spr_rey_launch)
{cancel=0
hboxhit=0
hit=3
damage=17
xscal=5
ysca1=3
hstun=35
xpos=hsp+18
ypos=0
launchh=false
sprite_index=spr_rey_heavy
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_rey_heavy &amp;&amp; image_index&gt;10)
{hsp+=3*image_xscale
sprite_index=spr_rey_idle
attacking=0
image_index=0
}

if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_rey_launch)
{hboxhit=0
cancel=0
hit=3
damage=19
hstun=50
xscal=2
yscal=3
xpos=hsp+30
ypos=-30
launchh=true
sprite_index=spr_rey_launch
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_rey_launch &amp;&amp; image_index&gt;10)
{
sprite_index=spr_rey_idle
attacking=0
image_index=0
}

}
else

{
if(light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_rey_heavyair &amp;&amp; sprite_index!=spr_alan_launchair  &amp;&amp; sprite_index!=spr_rey_lightair)
{cancel=0
hboxhit=0
hit=3
damage=9
xscal=3
yscal=2
hstun=28
xpos=hsp+10
ypos=+100
launchh=false
sprite_index=spr_rey_lightair
image_index=0
image_speed=0.2
attacking=1
}
if(sprite_index=spr_rey_lightair &amp;&amp; image_index&gt;8)
{
sprite_index=spr_rey_jump
attacking=0
image_index=0
}


if(heavy &amp;&amp;  !keyboard_check_direct(ord("W")) &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_rey_heavyair &amp;&amp; sprite_index!=spr_rey_launchair &amp;&amp; sprite_index!=spr_rey_heavyforair)
{cancel=0
hboxhit=0
hit=3
damage=15
xscal=10
yscal=4
hstun=40
xpos=hsp+20
ypos=+20
launchh=false
sprite_index=spr_rey_heavyair
image_index=0
image_speed=0.2
attacking=1
}
if(sprite_index=spr_rey_heavyair &amp;&amp; image_index&gt;12)
{
sprite_index=spr_rey_jump
attacking=0
image_index=0
}

if(heavy &amp;&amp; (left &amp;&amp; image_xscale&lt;0 or right &amp;&amp; image_xscale&gt;0) &amp;&amp; !keyboard_check_direct(ord("W")) &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_rey_launchair  &amp;&amp; sprite_index!=spr_rey_heavyforair)
{cancel=0
hboxhit=0
hit=4
damage=20
xscal=10
yscal=4
hstun=36
xpos=hsp+20
ypos=+20
launchh=false
sprite_index=spr_rey_heavyforair
image_index=0
image_speed=0.2
attacking=1
}
if(sprite_index=spr_rey_heavyforair &amp;&amp; image_index&gt;8)
{
sprite_index=spr_rey_jump
attacking=0
image_index=0
}

if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_rey_launchair)
{cancel=0
hboxhit=0
hit=4
damage=16
xscal=3
yscal=6
hstun=30
xpos=hsp+4
ypos=20
launchh=false
sprite_index=spr_rey_launchair
image_index=0
image_speed=0.2
attacking=1
}
if(sprite_index=spr_rey_launchair &amp;&amp; image_index&gt;14)
{
sprite_index=spr_rey_jump
attacking=0
image_index=0
}

}

if(attacking=true &amp;&amp; image_index&gt;=hit &amp;&amp; hboxhit=0)
{hboxhit=1
instance_create(x+xpos*(image_xscale/2),y+ypos,p2hbox)
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///input
left=keyboard_check_direct(vk_left)
right=keyboard_check_direct(vk_right)
pleft=keyboard_check_pressed(vk_left)
pright=keyboard_check_pressed(vk_right)
jump=keyboard_check_direct(vk_up)
//move left and right
//if(left or right) hsp=round(hsp)
if(dashing=0 &amp;&amp; block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=0)
{
if(pleft &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_rey_dash &amp;&amp; sprite_index!=spr_rey_backdash)
{attacking=2
if(image_xscale=4) sprite_index=spr_rey_backdash
else sprite_index=spr_rey_dash
image_index=0
hsp=-13
dashtime=20
dashing=1}
if(pleft &amp;&amp; sprite_index!=spr_rey_dash &amp;&amp; sprite_index!=spr_rey_backdash)
{dashtime=17
dashcheck=1}

if(pright &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_rey_dash &amp;&amp; sprite_index!=spr_rey_backdash )
{attacking=2
if(image_xscale=4) sprite_index=spr_rey_dash
else sprite_index=spr_rey_backdash
image_index=0
hsp=13
dashtime=20
dashing=1}
if(pright &amp;&amp; sprite_index!=spr_rey_dash &amp;&amp; sprite_index!=spr_rey_backdash)
{dashtime=17
dashcheck=1}
}
if(dashtime&lt;=0 &amp;&amp; (sprite_index==spr_rey_dash or sprite_index==spr_rey_backdash))
{attacking=0
dashcheck=0
dashing=0
sprite_index=spr_rey_idle
freakingslickdash=0}

if(sprite_index=spr_rey_idle) freakingslickdash=0

if(dashtime&gt;0) dashtime-=1

if(dashing=1 &amp;&amp; dashtimerfinal&gt;40 or dashtime&lt;=0)
{dashing=0
dashtimerfinal=0
dashtime=0
dashcheck=0
hsp=0}

if(dashing=1)
{dashtimerfinal++}

if(grounded=0 &amp;&amp; dashing=0)
{dashcheck=0
dashing=0
dashtime=0}

if(attacking==0 &amp;&amp; vsp&lt;0 &amp;&amp; !place_meeting(x,y+3,ground))
{sprite_index=spr_rey_jump}
if(attacking==0 &amp;&amp; hsp==0 &amp;&amp; grounded=1)
{sprite_index=spr_rey_idle}
if(attacking=0 or grounded=0)
{
if(dashing=0 &amp;&amp; hitstun&lt;=0)
{
if (left)

{
if(hsp&lt;-agi){}
else
{hsp=-agi}

}

if (right)
{
if(hsp&gt;agi){}
else
{hsp=agi}
}
}
//neutral input = 0 movement
if (((right &amp;&amp; left) or (!right &amp;&amp; !left)))
{
hsp=0

}

}
//jumping
if(dashing=0 &amp;&amp; jump &amp;&amp; grounded=1 &amp;&amp; (attacking!=1 or cancel=1 &amp;&amp; sprite_index=spr_rey_launch))
{
if(left) airMovementDir = -1;
else if(right) airMovementDir = 1;
else airMovementDir = 0;
grounded=0
if(sprite_index=spr_rey_launch)
{vsp=-14
instance_create(x,y+64,obj_jumpeffect)}
else
{vsp=-10}
}


//vertical collision
if (place_meeting (x,y+vsp,ground))
{
    while(!place_meeting(x,y+sign(vsp),ground))
    {
    y+=sign(vsp);
    }
    vsp=0
    grounded = 1;
}



else
{
grounded = 0
}
//horizontal collision   
if place_meeting(x+hsp,y,ground)
{
    if(!place_meeting(x+sign(hsp),y,ground)) hsp+=sign(hsp);
    hsp = 0;
}    
 
//commit to movement
if grounded == 0 &amp;&amp; hitstun == 0
    hsp = agi * airMovementDir;
x += hsp;
y += vsp;

vsp+=grav


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///blocking

if((image_xscale&lt;0 &amp;&amp; right or image_xscale&gt;0 &amp;&amp; left) &amp;&amp; p1.attacking=true &amp;&amp; global.p2combo=0 &amp;&amp; p1.block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=false)
{
attacking=1
hsp=0
block=1
sprite_index=spr_rey_block
}
if(sprite_index=spr_rey_block &amp;&amp; p1.attacking=false)
{
attacking=0
block=0
sprite_index=spr_rey_idle
}
if(attacking=false)
{block=0
image_blend=c_white}
if((image_xscale&lt;0 &amp;&amp; !right or image_xscale&gt;0 &amp;&amp; !left) &amp;&amp; block=1)
{block=0
attacking=0}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit
if(hitstun&gt;0)
{
if grounded == 0
    hsp = 0;
hitstun--
sprite_index=spr_rey_hit
attacking=1
}
if(hitstun&lt;=0 &amp;&amp; sprite_index=spr_rey_hit)
{
attacking=0
hitstun=0
sprite_index=spr_rey_idle
global.p1combo=0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x,y-70,dashtime)

if(global.p1combo=0 &amp;&amp; (sprite_index=spr_rey_dash or sprite_index=spr_rey_backdash or hsp&lt;-3 or hsp&gt;3 or launchh=true or freakingslickdash=1))
{
freakingslickdash=1
draw_set_color(c_blue)
draw_sprite_ext(sprite_index,image_index-image_speed,x-hsp*3,y-vsp*3,image_xscale,4,0,c_green,0.4)

}
if(place_meeting(x,y+1,ground))
{freakingslickdash=0}
draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
